 **1️⃣ 질문 분석 – 핵심 키워드 정리**

| 핵심 키워드     | 설명                                  |
| ---------- | ----------------------------------- |
| 리스트(List)  | **순서가 중요**한 데이터들의 묶음. 인덱스로 접근 가능    |
| 딕셔너리(dict) | **키-값(key-value)** 쌍으로 구성된 데이터 구조   |
| 슬라이싱       | 리스트의 특정 부분만 잘라내는 문법 (예: `:3`, `-1`) |
| 정렬(sort)   | 리스트를 오름차순/내림차순으로 정렬하는 메서드           |
| 포함 여부 확인   | `in` 키워드로 해당 요소가 리스트에 있는지 확인        |
| 불(Boolean) | 참(True) 또는 거짓(False)을 판단하는 결과       |

---

✔ **2️⃣ 해결 방법 – 논리적 사고 적용 (체크박스 구조)**

### ✔ 단계별 정리 + 예시

---

**✔️ 1단계: 리스트의 기본 개념 이해**

```python
A_list = ['사과', '배', '감']
print(A_list[0])  # 출력: 사과
```

* **리스트는 순서가 있는 데이터 구조**
* 각 항목은 **인덱스(0부터 시작)** 로 접근 가능

---

**✔️ 2단계: 리스트 슬라이싱**

```python
print(A_list[:3])   # 출력: ['사과', '배', '감'] (앞에서 3개까지)
print(A_list[-1])   # 출력: '감' (맨 마지막 항목)
```

| 슬라이싱 문법      | 의미              |
| ------------ | --------------- |
| `A_list[:3]` | 앞에서 3개 요소까지 자르기 |
| `A_list[-1]` | 리스트의 마지막 요소 접근  |

---

**✔️ 3단계: 리스트 수정 및 추가**

```python
A_list.append('귤')     # 맨 끝에 추가
A_list.insert(1, '포도')  # 두 번째 위치에 '포도' 삽입
print(A_list)
```

**결과:** `['사과', '포도', '배', '감', '귤']`

---

**✔️ 4단계: 정렬 (sort)**

```python
numbers = [5, 2, 9, 1]
numbers.sort(reverse=True)
print(numbers)  # 출력: [9, 5, 2, 1]
```

| 메서드                  | 기능           |
| -------------------- | ------------ |
| `sort()`             | 리스트를 오름차순 정렬 |
| `sort(reverse=True)` | 내림차순 정렬      |

**주의:** `sort()`는 리스트 자체를 **변경**하며 반환값은 `None`

---

**✔️ 5단계: 포함 여부 (in) 및 참/거짓**

```python
result = 99 in A_list
print(result)  # 출력: False
```

* `in` 키워드는 특정 값이 리스트에 **존재하는지 검사**
* 반환값은 **불 타입(True 또는 False)**

---

🔥 **3️⃣ 실전 적용 – 사례 & 예시 추가**

📌 **상황 1: 시험에서 슬라이싱 묻는 문제**

```python
fruits = ['딸기', '사과', '포도', '배', '복숭아']
print(fruits[1:4])  # ['사과', '포도', '배']
```

📌 **상황 2: 실제 프로젝트에서 정렬이 필요한 경우**

```python
scores = [88, 92, 70, 100]
scores.sort()
print(scores)  # [70, 88, 92, 100]
```

---

🔥 **4️⃣ 고급 팁 – 더 강력한 활용법 추가**

| ❌ 잘못된 방식                           | ✅ 올바른 방식                          |
| ---------------------------------- | --------------------------------- |
| `print(A_list.sort())` → `None` 출력 | `A_list.sort(); print(A_list)` 사용 |
| 리스트에 숫자 + 문자 혼용 시 정렬 오류            | 데이터 타입을 **통일**해줘야 정렬 가능           |

📌 **참고:** 파이썬에서는 문자열 리스트와 숫자 리스트를 **같이 정렬하면 에러**가 발생합니다.
